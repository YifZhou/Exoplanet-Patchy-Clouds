import matplotlib.pyplot as plt
from linearFit import linearFit
import pickle
def plotTrend (dataStack, xCenter, side = 2, output = None):#2side+1 x 2side+1 pixels subimage
    plt.close('all')
    fig, axes = plt.subplots(ncols = 2*side + 1, nrows = 2*side + 1, sharex = True, sharey = True, figsize = (24, 20))
    fig.subplots_adjust(hspace = 0, wspace = 0)
    subIMShape = dataStack.shape
    c = subIMShape[0]//2
    delta = xCenter - xCenter[0]
    for i, dim0 in enumerate(range(c-side, c+side+1)):
        for j, dim1 in enumerate(range(c-side, c+side+1)):
            y = dataStack[dim0, dim1, :]/dataStack[dim0, dim1, :].mean()
            err = np.sqrt(np.abs(dataStack[dim0, dim1, :]))/np.abs(dataStack[dim0, dim1, :])#relative uncertainty
            b, m, db, dm, chisq = linearFit(delta, y, y*err)
            axes[i, j].plot(delta, y, linewidth = 0, marker = '.', label = '({0}, {1})')
            axes[i, j].plot(np.sort(delta), np.sort(delta)*m + b)
            axes[i, j].annotate('x={0},y={1}'.format(dim1 - c, dim0 - c), xy = (0.2, 0.8), xycoords = 'axes fraction')
            axes[i, j].xaxis.set_major_locator(plt.MaxNLocator(4))

    if output is None:
        plt.show()
    else:
        plt.savefig(output)